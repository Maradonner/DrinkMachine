// <auto-generated />
using System;
using DrinkMachine.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrinkMachine.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230627075716_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DrinkMachine.DAL.Entities.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Coins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://ru-moneta.ru/upload/monety-ru/rubl-1-1.jpg",
                            IsBlocked = false,
                            Value = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://ru-moneta.ru/upload/monety-ru/st-1-4.jpg",
                            IsBlocked = false,
                            Value = 2
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://ru-moneta.ru/upload/monety-ru/1999-sr.jpg",
                            IsBlocked = false,
                            Value = 5
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://ru-moneta.ru/upload/moneta-ru/2019-10rub-01r.jpg",
                            IsBlocked = false,
                            Value = 10
                        });
                });

            modelBuilder.Entity("DrinkMachine.DAL.Entities.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://cdn.iportal.ru/preview/news/articles/1abee4eeb5843831b81b268032278c150f1c079a_1200_800_c.jpg",
                            Name = "Pepsi",
                            Price = 15,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0cdopkxHgUUq2rrnqIVRMCXYbyQD0f2n7-A&usqp=CAU",
                            Name = "Fanta",
                            Price = 17,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://lenta.servicecdn.ru/globalassets/1/-/65/86/05/438102.png?preset=fulllossywhite",
                            Name = "Dobriy Cola",
                            Price = 12,
                            Quantity = 121
                        });
                });

            modelBuilder.Entity("DrinkMachine.DAL.Entities.SessionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Balance")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastAccessed")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DbSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
